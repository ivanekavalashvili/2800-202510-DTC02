<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <br><br><br>

    <!-- Dialog box -->
    <dialog id="dialogBox">
        <div id="dialogResult"></div>
    </dialog>


    <p id="roleType">you are a <%= role %></p>

    <% if (role == "parent" ) { %>
        <p>this is testing parent rendering</p>
        <div id="result"></div>
        <button onclick="dialogMaker(createCategoryPopup)" class="bg-red-500">Create Category Button</button>

        <template id="categoryCreationTemplate">
            <div class="m-5">
                <p class="text-lg font-bold">Create a Category</p>
                <form action="/createCategory" method="POST">
                    <label for="name">Name:</label>
                    <input type="text" id="categoryName" class="border-2">
                    <label for="color">Background Color:</label>
                    <input type="color" id="categoryColor" class="border-2">
                    <div class="flex justify-between">
                        <button id="cancelButton" onclick="closeDialog()" class="bg-red-500">Cancel</button>
                        <button id="submitButton" onclick="newCategory()" class="bg-red-500" type="submit">Submit</button>
                    </div>
                </form>
            </div>
        </template>
    <% } %>
        
    <% if (role == "kid" ) { %>
        <p>this is testing kid rendering</p>
    <% } %>
        
    <% if (role == undefined ) { %>
        <p>Please log in</p>
    <% } %>

    <script>
        const dialog = document.querySelector("dialog")
        const dialogResult = document.getElementById("dialogResult")
        
        function dialogMaker(makes) {
            dialog.showModal()
            makes()
        }
        
        // creates a category based on 
        function createCategoryPopup() {
            categoryTemplate = document.getElementById("categoryCreationTemplate")
            dialogResult.appendChild(categoryTemplate.content.cloneNode(true)) 
        }

        function fetchCategories() {
            fetch("/categories", { method: "GET" }
                .then((response) => response.json())
                .then((data) => {
                    const result = document.getElementById("result")
                    result.innerHTML = ""
                    data.forEach((category) => {
                        const div = document.createElement("div")
                        div.setAttribute("id", category.name)
                        div.innerText = category.name
                        result.appendChild("div")
                    })
                })
            )
        }

        function newCategory() {
            
            closeDialog()
        }

        function closeDialog() {
            dialog.close();
        }
        fetchCategories()
    </script>
</body>

</html>