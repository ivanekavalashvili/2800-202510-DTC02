<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile</title>
    <link rel="stylesheet" href="/styles.css">
</head>

<body>
    <header class="profile-header">
        <h1>Welcome, <%= user.username || user.email %>!</h1>
    </header>
    <div class="profile-content">
        <% if (role==="parent" ) { %>
            <a href="#" id="openAddKidModal" class="nav-btn">Add Kid</a>
        <% if (kids && kids.length> 0) { %>
            <div class="kid-list-container">
                <h3>Linked Kid Account</h3>
            <ul class="kid-list">
                <% kids.forEach(kid=> { %>
                    <li class="kid-row">
                        <span class="kid-name">
                            <%= kid.username %> — <strong>
                                    <%= kid.points || 0 %> pts
                                </strong>
                        </span>
                        <button class="nav-btn delete-kid-btn" data-kid-id="<%= kid._id %>">Delete</button>
                    </li>
                    <% }) %>
            </ul>
        <% } else { %>
            <p>No kid accounts linked yet.</p><% } %>
        <% } %>
        <% if (role==="kid" ) { %>
            <div class="leaderboard-section">
                <h2>Family Leaderboard</h2>
                <ul id="leaderboard-list"></ul>
            </div><% } %>
        <% if (!role) { %>
            <p>Role is undefined</p> <% } %>
    </div>
   
    <div id="addKidModal" class="modal" style="display: none;">
        <div class="modal-content">
            <span class="close-btn" id="closeAddKidModal">&times;</span>
            <h2>Add a Kid Account</h2>
            <form id="addKidForm">
                <input class="input" type="text" name="username" placeholder="Kid's Username" required>
                <input class="input" type="password" name="password" placeholder="Password" required minlength="8">
                <button type="submit" class="login-btn">Create Kid Account</button>
            </form>
        </div>
    </div>
</div>
</body>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const modal = document.getElementById("addKidModal");
        const openBtn = document.getElementById("openAddKidModal");
        const closeBtn = document.getElementById("closeAddKidModal");
        const form = document.getElementById("addKidForm");

        if (modal && openBtn && closeBtn) {
            openBtn.addEventListener("click", (e) => {
                e.preventDefault();
                modal.style.display = "flex";
            });

            closeBtn.addEventListener("click", () => {
                modal.style.display = "none";
            });

            window.addEventListener("click", (event) => {
                if (event.target === modal) {
                    modal.style.display = "none";
                }
            });
        }

        if (form) {
            form.addEventListener("submit", async (e) => {
                e.preventDefault();
                const username = form.username.value;
                const password = form.password.value;

                const res = await fetch("/add-kid", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ username, password }),
                });

                const data = await res.json();
                if (res.ok) {
                    alert("Kid account created!");
                    form.reset();
                    modal.style.display = "none";
                    location.reload();
                } else {
                    alert(data.message);
                }
            });
        }
    });

     document.querySelectorAll('.delete-kid-btn').forEach(button => {
            button.addEventListener('click', async () => {
                const kidId = button.dataset.kidId;
                const confirmed = confirm("Are you sure you want to delete this kid?");
                if (!confirmed) return;

                try {
                    const res = await fetch(`/kids/${kidId}`, {
                        method: 'DELETE'
                    });

                    if (res.ok) {
                        location.reload(); 
                    } else {
                        alert("Failed to delete kid.");
                    }
                } catch (err) {
                    console.error("Delete error:", err);
                    alert("An error occurred while trying to delete the kid.");
                }
            });
        });
         document.addEventListener('DOMContentLoaded', async () => {
                const leaderboardList = document.getElementById('leaderboard-list');

                try {
                    const res = await fetch('/leaderboard');
                    const data = await res.json();

                    const currentUsername = "<%= user.username %>";

                    leaderboardList.innerHTML = '';
                    data.forEach((kid, index) => {
                        const li = document.createElement('li');
                        li.innerHTML = `<strong>#${index + 1}</strong> ${kid.username} — ${kid.points || 0} pts`;

                        if (kid.username === currentUsername) {
                            li.style.fontWeight = 'bold';
                            li.style.color = '#2e8b3d';
                            li.innerHTML += ' (You)';
                        }

                        leaderboardList.appendChild(li);
                    });
                } catch (err) {
                    console.error('Error loading leaderboard:', err);
                    leaderboardList.innerHTML = '<li>Could not load leaderboard.</li>';
                }
            });

    </script>

</html>